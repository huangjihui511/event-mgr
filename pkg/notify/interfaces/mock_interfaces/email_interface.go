// Code generated by MockGen. DO NOT EDIT.
// Source: huangjihui511/event-mgr/pkg/notify/interfaces (interfaces: EmailInterface)

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEmailInterface is a mock of EmailInterface interface.
type MockEmailInterface struct {
	ctrl     *gomock.Controller
	recorder *MockEmailInterfaceMockRecorder
}

// MockEmailInterfaceMockRecorder is the mock recorder for MockEmailInterface.
type MockEmailInterfaceMockRecorder struct {
	mock *MockEmailInterface
}

// NewMockEmailInterface creates a new mock instance.
func NewMockEmailInterface(ctrl *gomock.Controller) *MockEmailInterface {
	mock := &MockEmailInterface{ctrl: ctrl}
	mock.recorder = &MockEmailInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmailInterface) EXPECT() *MockEmailInterfaceMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockEmailInterface) Send(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockEmailInterfaceMockRecorder) Send(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockEmailInterface)(nil).Send), arg0, arg1, arg2)
}
